# Data da última revisão: 15 de Maio de 2025
name: CI Weather Sync Backend
on:
  pull_request:
    branches: [main, master, dev, development]
  push:
    branches: [main, master, dev, development]
  workflow_dispatch:
    inputs:
      run_tests:
        description: "Executar testes manualmente"
        required: true
        type: boolean
        default: true
jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    services:
      postgres:
        image: bitnami/postgresql
        ports:
          - 5432:5432
        env:
          POSTGRESQL_USERNAME: docker
          POSTGRESQL_PASSWORD: docker
          POSTGRESQL_DATABASE: weather-sync
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
          cache: "bun"
          
      - name: Instalar dependências
        run: "bun i"
        
      - name: Configurar variáveis de ambiente para teste
        run: |
          # Verificar se o arquivo .env existe
          if [ -f ".env" ]; then
            echo "Arquivo .env encontrado. Garantindo variáveis necessárias para teste..."
            # Garantir que as variáveis críticas para o teste estejam corretas
            sed -i 's|^DATABASE_URL=.*|DATABASE_URL=postgresql://docker:docker@localhost:5432/weather-sync|' .env
            sed -i 's|^NODE_ENV=.*|NODE_ENV=test|' .env
            sed -i 's|^JWT_SECRET=.*|JWT_SECRET=testing|' .env
            echo "Arquivo .env configurado para ambiente de teste."
          else
            echo "Arquivo .env não encontrado. Criando arquivo..."
            echo "DATABASE_URL=postgresql://docker:docker@localhost:5432/weather-sync" > .env
            echo "NODE_ENV=test" >> .env
            echo "JWT_SECRET=testing" >> .env
            echo "APP_PORT=8080" >> .env
            echo "BASE_URL=http://localhost:8080" >> .env
            # Variáveis Twilio serão fornecidas apenas como variáveis de ambiente no passo de teste
            echo "Arquivo .env básico criado para testes."
          fi
          echo "Aguardando 7 segundos para garantir o carregamento das variáveis de ambiente..."
          sleep 7
          
      - name: Gerar esquema do banco de dados
        run: "npx drizzle-kit generate"
        env:
          DATABASE_URL: "postgresql://docker:docker@localhost:5432/weather-sync"
          
      - name: Executar migrações do banco de dados
        run: "npx drizzle-kit migrate"
        env:
          DATABASE_URL: "postgresql://docker:docker@localhost:5432/weather-sync"
          
      - name: Executar testes
        run: "bun test"
        env:
          DATABASE_URL: "postgresql://docker:docker@localhost:5432/weather-sync"
          NODE_ENV: "test"
          JWT_SECRET: "testing"
          TWILIO_ACCOUNT: ${{ secrets.TWILIO_ACCOUNT || 'testing-account' }}
          TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID || 'testing-sid' }}
          TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN || 'testing-token' }}
          TWILIO_PHONE_NUMBER: ${{ secrets.TWILIO_PHONE_NUMBER || '+5599999999999' }}
          TWILIO_TEMPLATE: ${{ secrets.TWILIO_TEMPLATE || 'testing-template' }}